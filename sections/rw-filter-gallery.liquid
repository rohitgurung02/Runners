{%- assign sec_id = '#shopify-section-' | append: section.id -%}
{%- assign parts = sec_id | split: '_' -%}
{%- assign last_lower = parts | last -%}
{%- assign last_part = last_lower | downcase -%}

<style>
  {{ sec_id }} .pc-filterable-gallery {
    position: relative;
    z-index: 1;
    padding-top: {{ section.settings.desktop_padding_top }}px;
    padding-bottom: {{ section.settings.desktop_padding_bottom }}px;
    background-color: {{ section.settings.background_color }};
  }

  {{ sec_id }} .pc-container {
    max-width: {{ section.settings.max_width }}px;
    margin: 0 auto;
    padding: 0 15px;
  }

  {{ sec_id }} .pc-text-center {
    text-align: center;
    margin-bottom: {{ section.settings.title_bottom_margin }}px;
  }

  {{ sec_id }} .pc-title {
    font-size: {{ section.settings.heading_size }}px;
    font-weight: {{ section.settings.heading_weight }};
    color: {{ section.settings.heading_color }};
    margin-bottom: {{ section.settings.heading_bottom_margin }}px;
  }

  {{ sec_id }} .pc-subtitle {
    font-size: {{ section.settings.subheading_size }}px;
    color: {{ section.settings.subheading_color }};
    max-width: {{ section.settings.subheading_max_width }}px;
    margin: 0 auto;
  }

  {{ sec_id }} .pc-filter {
    text-align: center;
    max-width: 1050px;
    margin: 0 auto {{ section.settings.filter_bottom_margin }}px;
  }

  {{ sec_id }} .pc-btn {
    padding: {{ section.settings.filter_vertical_padding }}px {{ section.settings.filter_horizontal_padding }}px;
    margin: 5px 4px 4px 0;
    display: inline-block;
    color: {{ section.settings.filter_text_color }};
    text-decoration: {{ section.settings.button_text_decoration }};
    background: {{ section.settings.filter_bg_color }};
    border: 1px solid {{ section.settings.filter_border_color }};
    transition: all 0.4s;
    border-radius: {{ section.settings.filter_border_radius }}px;
    font-size: {{ section.settings.filter_font_size }}px;
    font-weight: {{ section.settings.filter_font_weight }};
    cursor: pointer;
  }

  {{ sec_id }} .pc-btn:hover,
  {{ sec_id }} .pc-btn-active {
    background: {{ section.settings.filter_active_bg_color }};
    color: {{ section.settings.filter_active_text_color }};
    transform: translateY(3px);
  }

  {{ sec_id }} .pc-gallery {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    margin: {{ section.settings.gallery_top_margin }}px auto;
    gap: {{ section.settings.image_gap }}px;
  }

  {{ sec_id }} .pc-gallery-item {
    display: block;
    transition: all 0.3s ease;
  }

  {{ sec_id }} .pc-gallery-img {
    width: {{ section.settings.image_width }}px;
    height: {{ section.settings.image_height }}px;
    object-fit: cover;
    transition: 0.3s ease-in-out;
    border-radius: {{ section.settings.image_border_radius }}px;
    overflow: hidden;
  }

  {{ sec_id }} .pc-gallery-item:hover .pc-gallery-img {
    transform: scale(1.1);
  }

  {{ sec_id }} .pc-hide {
    display: none !important;
  }

  /* Image preview modal styles */
  {{ sec_id }} .pc-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.9);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease;
  }

  {{ sec_id }} .pc-modal.active {
    opacity: 1;
    pointer-events: all;
  }

  {{ sec_id }} .pc-modal-content {
    position: relative;
    max-width: 90%;
    max-height: 90%;
  }

  {{ sec_id }} .pc-modal-img {
    max-width: 100%;
    max-height: 80vh;
    display: block;
  }

  {{ sec_id }} .pc-modal-close {
    position: absolute;
    top: 15px;
    right: 15px;
    color: white;
    font-size: 30px;
    cursor: pointer;
    background: rgba(0, 0, 0, 0.5);
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
  }

  {{ sec_id }} .pc-modal-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    color: white;
    font-size: 30px;
    cursor: pointer;
    background: rgba(0, 0, 0, 0.5);
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
  }

  {{ sec_id }} .pc-modal-prev {
    left: 15px;
  }

  {{ sec_id }} .pc-modal-next {
    right: 15px;
  }

  /* Responsive styles */
  @media (max-width: 1199px) {
    {{ sec_id }} .pc-filterable-gallery {
      padding-top: {{ section.settings.tablet_padding_top }}px;
      padding-bottom: {{ section.settings.tablet_padding_bottom }}px;
    }
  }

  @media (max-width: 991px) {
    {{ sec_id }} .pc-filterable-gallery {
      padding-top: {{ section.settings.mobile_padding_top }}px;
      padding-bottom: {{ section.settings.mobile_padding_bottom }}px;
    }
  }

  @media (max-width: 767px) {
    {{ sec_id }} .pc-title {
      font-size: {{ section.settings.mobile_heading_size }}px;
    }

    {{ sec_id }} .pc-gallery-img {
      width: {{ section.settings.mobile_image_width }}px;
      height: {{ section.settings.mobile_image_height }}px;
    }
  }

  @media (max-width: 540px) {
    {{ sec_id }} .pc-gallery-img {
      width: {{ section.settings.small_mobile_image_width }}px;
      height: {{ section.settings.small_mobile_image_height }}px;
    }
  }
</style>

<div class="pc-filterable-gallery">
  <div class="pc-container">
    <!-- Section Title Start -->
    <div class="pc-text-center">
      {%- if section.settings.heading != blank -%}
        <h2 class="pc-title">{{ section.settings.heading }}</h2>
      {%- endif -%}
      {%- if section.settings.subheading != blank -%}
        <p class="pc-subtitle">{{ section.settings.subheading }}</p>
      {%- endif -%}
    </div>
    <!-- Section Title End -->

    <!-- Filter Buttons -->
    <div class="pc-filter">
      <button class="pc-btn pc-btn-active" data-filter="all">ALL</button>
      {%- for block in section.blocks -%}
        {%- if block.type == 'filter_button' -%}
          {%- assign filter_tag = block.settings.filter_tag | handleize -%}
          <button class="pc-btn" data-filter="{{ filter_tag }}">{{ block.settings.filter_tag }}</button>
        {%- endif -%}
      {%- endfor -%}
    </div>

    <!-- Gallery Items -->
    <div class="pc-gallery">
      {%- for block in section.blocks -%}
        {%- if block.type == 'gallery_item' -%}
          {%- assign item_filter_tags = block.settings.filter_tag | split: ',' -%}
          {%- assign item_classes = '' -%}
          {%- for tag in item_filter_tags -%}
            {%- assign handleized_tag = tag | handleize -%}
            {%- assign item_classes = item_classes | append: ' pc-' | append: handleized_tag -%}
          {%- endfor -%}
          
          <div class="pc-gallery-item pc-all{{ item_classes }}" data-tags="{{ item_filter_tags | join: ',' | handleize }}">
            {%- if block.settings.image != blank -%}
              <img class="pc-gallery-img" 
                   src="{{ block.settings.image | img_url: '400x' }}" 
                   alt="{{ block.settings.image.alt | escape }}" 
                   loading="lazy">
            {%- else -%}
              {{ 'product-1' | placeholder_svg_tag: 'pc-gallery-img' }}
            {%- endif -%}
          </div>
        {%- endif -%}
      {%- endfor -%}
    </div>
  </div>
</div>

<!-- Image Preview Modal -->
<div class="pc-modal">
  <div class="pc-modal-content">
    <span class="pc-modal-close">&times;</span>
    <img class="pc-modal-img" src="" alt="">
    <div class="pc-modal-nav pc-modal-prev">&#10094;</div>
    <div class="pc-modal-nav pc-modal-next">&#10095;</div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const sectionId = '{{ sec_id }}';
    const filterButtons = document.querySelectorAll(`${sectionId} .pc-btn`);
    const galleryItems = document.querySelectorAll(`${sectionId} .pc-gallery-item`);
    const modal = document.querySelector(`${sectionId} .pc-modal`);
    const modalImg = document.querySelector(`${sectionId} .pc-modal-img`);
    const closeBtn = document.querySelector(`${sectionId} .pc-modal-close`);
    const prevBtn = document.querySelector(`${sectionId} .pc-modal-prev`);
    const nextBtn = document.querySelector(`${sectionId} .pc-modal-next`);
    
    let currentImageIndex = 0;
    let filteredItems = [];

    // Filter functionality
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const filterValue = button.dataset.filter;
        
        // Update active button
        filterButtons.forEach(btn => btn.classList.remove('pc-btn-active'));
        button.classList.add('pc-btn-active');
        
        // Filter items
        galleryItems.forEach(item => {
          if (filterValue === 'all') {
            item.classList.remove('pc-hide');
          } else {
            const itemTags = item.dataset.tags.split(',');
            if (itemTags.includes(filterValue)) {
              item.classList.remove('pc-hide');
            } else {
              item.classList.add('pc-hide');
            }
          }
        });
      });
    });

    // Image preview functionality
    galleryItems.forEach((item, index) => {
      item.addEventListener('click', () => {
        const img = item.querySelector('img');
        if (img) {
          currentImageIndex = index;
          modalImg.src = img.src;
          modalImg.alt = img.alt;
          modal.classList.add('active');
          
          // Update filtered items array based on current filter
          const activeFilter = document.querySelector(`${sectionId} .pc-btn-active`).dataset.filter;
          filteredItems = Array.from(galleryItems).filter(item => {
            if (activeFilter === 'all') return true;
            const itemTags = item.dataset.tags.split(',');
            return itemTags.includes(activeFilter) && !item.classList.contains('pc-hide');
          });
          
          // Find the new index in filtered array
          currentImageIndex = Array.from(filteredItems).indexOf(item);
        }
      });
    });

    // Modal navigation
    closeBtn.addEventListener('click', () => {
      modal.classList.remove('active');
    });

    prevBtn.addEventListener('click', () => {
      if (filteredItems.length > 0) {
        currentImageIndex = (currentImageIndex - 1 + filteredItems.length) % filteredItems.length;
        const img = filteredItems[currentImageIndex].querySelector('img');
        modalImg.src = img.src;
        modalImg.alt = img.alt;
      }
    });

    nextBtn.addEventListener('click', () => {
      if (filteredItems.length > 0) {
        currentImageIndex = (currentImageIndex + 1) % filteredItems.length;
        const img = filteredItems[currentImageIndex].querySelector('img');
        modalImg.src = img.src;
        modalImg.alt = img.alt;
      }
    });

    // Close modal when clicking outside
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.remove('active');
      }
    });
  });
</script>

{% schema %}
{
  "name": "RW - Filter Gallery",
  "settings": [
    {
      "type": "header",
      "content": "Layout Settings"
    },
    {
      "type": "range",
      "id": "max_width",
      "label": "Max Width",
      "min": 800,
      "max": 1800,
      "step": 10,
      "unit": "px",
      "default": 1320
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "image_gap",
      "label": "Image Gap",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "px",
      "default": 15
    },
    {
      "type": "header",
      "content": "Section Padding (Desktop)"
    },
    {
      "type": "range",
      "id": "desktop_padding_top",
      "label": "Top Padding",
      "min": 0,
      "max": 200,
      "step": 5,
      "unit": "px",
      "default": 80
    },
    {
      "type": "range",
      "id": "desktop_padding_bottom",
      "label": "Bottom Padding",
      "min": 0,
      "max": 200,
      "step": 5,
      "unit": "px",
      "default": 80
    },
    {
      "type": "header",
      "content": "Section Padding (Tablet)"
    },
    {
      "type": "range",
      "id": "tablet_padding_top",
      "label": "Top Padding",
      "min": 0,
      "max": 200,
      "step": 5,
      "unit": "px",
      "default": 70
    },
    {
      "type": "range",
      "id": "tablet_padding_bottom",
      "label": "Bottom Padding",
      "min": 0,
      "max": 200,
      "step": 5,
      "unit": "px",
      "default": 70
    },
    {
      "type": "header",
      "content": "Section Padding (Mobile)"
    },
    {
      "type": "range",
      "id": "mobile_padding_top",
      "label": "Top Padding",
      "min": 0,
      "max": 200,
      "step": 5,
      "unit": "px",
      "default": 50
    },
    {
      "type": "range",
      "id": "mobile_padding_bottom",
      "label": "Bottom Padding",
      "min": 0,
      "max": 200,
      "step": 5,
      "unit": "px",
      "default": 50
    },
    {
      "type": "header",
      "content": "Title Settings"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Our Gallery"
    },
    {
      "type": "range",
      "id": "heading_size",
      "label": "Heading Size (Desktop)",
      "min": 20,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 46
    },
    {
      "type": "range",
      "id": "mobile_heading_size",
      "label": "Heading Size (Mobile)",
      "min": 16,
      "max": 60,
      "step": 1,
      "unit": "px",
      "default": 36
    },
    {
      "type": "select",
      "id": "heading_weight",
      "label": "Heading Weight",
      "options": [
        {
          "value": "400",
          "label": "Regular"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi Bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "700"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading Color",
      "default": "#f44336"
    },
    {
      "type": "range",
      "id": "heading_bottom_margin",
      "label": "Heading Bottom Margin",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 5
    },
    {
      "type": "header",
      "content": "Subtitle Settings"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Some Random Photos Lorem ipsum, dolor sit."
    },
    {
      "type": "range",
      "id": "subheading_size",
      "label": "Subheading Size",
      "min": 12,
      "max": 36,
      "step": 1,
      "unit": "px",
      "default": 16
    },
    {
      "type": "color",
      "id": "subheading_color",
      "label": "Subheading Color",
      "default": "#4c4c4c"
    },
    {
      "type": "range",
      "id": "subheading_max_width",
      "label": "Subheading Max Width",
      "min": 200,
      "max": 800,
      "step": 10,
      "unit": "px",
      "default": 600
    },
    {
      "type": "range",
      "id": "title_bottom_margin",
      "label": "Title Section Bottom Margin",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 10
    },
    {
      "type": "header",
      "content": "Filter Settings"
    },
    {
      "type": "range",
      "id": "filter_font_size",
      "label": "Filter Font Size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "default": 16
    },
    {
      "type": "select",
      "id": "filter_font_weight",
      "label": "Filter Font Weight",
      "options": [
        {
          "value": "400",
          "label": "Regular"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi Bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "500"
    },
    {
      "type": "color",
      "id": "filter_text_color",
      "label": "Filter Text Color",
      "default": "#003"
    },
    {
      "type": "select",
      "id": "button_text_decoration",
      "label": "Text Decoration",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "underline",
          "label": "Underline"
        },
        {
          "value": "overline",
          "label": "Overline"
        },
        {
          "value": "line-through",
          "label": "Line Through"
        }
      ],
      "default": "none"
    },
    {
      "type": "color",
      "id": "filter_bg_color",
      "label": "Filter Background Color",
      "default": "#eee"
    },
    {
      "type": "color",
      "id": "filter_border_color",
      "label": "Filter Border Color",
      "default": "#f44336"
    },
    {
      "type": "color",
      "id": "filter_active_text_color",
      "label": "Active Filter Text Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "filter_active_bg_color",
      "label": "Active Filter Background Color",
      "default": "#f44336"
    },
    {
      "type": "range",
      "id": "filter_border_radius",
      "label": "Filter Border Radius",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "default": 10
    },
    {
      "type": "range",
      "id": "filter_vertical_padding",
      "label": "Filter Vertical Padding",
      "min": 5,
      "max": 30,
      "step": 1,
      "unit": "px",
      "default": 10
    },
    {
      "type": "range",
      "id": "filter_horizontal_padding",
      "label": "Filter Horizontal Padding",
      "min": 10,
      "max": 50,
      "step": 1,
      "unit": "px",
      "default": 20
    },
    {
      "type": "range",
      "id": "filter_bottom_margin",
      "label": "Filter Bottom Margin",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 0
    },
    {
      "type": "header",
      "content": "Gallery Settings"
    },
    {
      "type": "range",
      "id": "gallery_top_margin",
      "label": "Gallery Top Margin",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "image_width",
      "label": "Image Width (Desktop)",
      "min": 100,
      "max": 400,
      "step": 10,
      "unit": "px",
      "default": 200
    },
    {
      "type": "range",
      "id": "image_height",
      "label": "Image Height (Desktop)",
      "min": 100,
      "max": 500,
      "step": 10,
      "unit": "px",
      "default": 180
    },
    {
      "type": "range",
      "id": "mobile_image_width",
      "label": "Image Width (Tablet)",
      "min": 80,
      "max": 300,
      "step": 10,
      "unit": "px",
      "default": 80
    },
    {
      "type": "range",
      "id": "mobile_image_height",
      "label": "Image Height (Tablet)",
      "min": 80,
      "max": 400,
      "step": 10,
      "unit": "px",
      "default": 80
    },
    {
      "type": "range",
      "id": "small_mobile_image_width",
      "label": "Image Width (Mobile)",
      "min": 60,
      "max": 200,
      "step": 10,
      "unit": "px",
      "default": 60
    },
    {
      "type": "range",
      "id": "small_mobile_image_height",
      "label": "Image Height (Mobile)",
      "min": 60,
      "max": 300,
      "step": 10,
      "unit": "px",
      "default": 180
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "label": "Image Border Radius",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "default": 10
    }
  ],
  "blocks": [
    {
      "type": "filter_button",
      "name": "Filter Button",
      "settings": [
        {
          "type": "text",
          "id": "filter_tag",
          "label": "Filter Tag",
          "info": "This will be used to filter gallery items",
          "default": "Product"
        }
      ]
    },
    {
      "type": "gallery_item",
      "name": "Gallery Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "filter_tag",
          "label": "Filter Tags",
          "info": "Comma separated list of tags that match filter buttons",
          "default": "Product"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "RW - Filter Gallery",
      "blocks": [
        {
          "type": "filter_button",
          "settings": {
            "filter_tag": "Product"
          }
        },
        {
          "type": "filter_button",
          "settings": {
            "filter_tag": "Nature"
          }
        },
        {
          "type": "filter_button",
          "settings": {
            "filter_tag": "People"
          }
        },
        {
          "type": "gallery_item",
          "settings": {
            "filter_tag": "Product"
          }
        },
        {
          "type": "gallery_item",
          "settings": {
            "filter_tag": "Nature"
          }
        },
        {
          "type": "gallery_item",
          "settings": {
            "filter_tag": "People"
          }
        },
        {
          "type": "gallery_item",
          "settings": {
            "filter_tag": "Product,People"
          }
        },
        {
          "type": "gallery_item",
          "settings": {
            "filter_tag": "Nature,People"
          }
        }
      ]
    }
  ]
}
{% endschema %}