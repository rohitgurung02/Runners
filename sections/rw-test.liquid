{%- assign sec_id = '#shopify-section-' | append: section.id -%}
{%- assign parts = sec_id | split: '_' -%}
{%- assign last_lower = parts | last -%}
{%- assign last_part = last_lower | downcase -%}

<pc-testimonials-{{ last_part }} class="pc-testimonials">
  <div class="pc-testimonials__container">
    {%- if section.settings.heading != blank -%}
      <h2 class="pc-testimonials__heading">{{ section.settings.heading }}</h2>
    {%- endif -%}
    
    <div class="pc-testimonials__carousel">
      {%- for block in section.blocks -%}
        <div class="pc-testimonials__slide">
          <div class="pc-testimonials__card">
            <div class="pc-testimonials__content">
              {%- if block.settings.name != blank -%}
                <h3 class="pc-testimonials__name">
                  {{ block.settings.name }}
                  {%- if block.settings.position != blank -%}
                    <span class="pc-testimonials__position">{{ block.settings.position }}</span>
                  {%- endif -%}
                </h3>
              {%- endif -%}
              
              {%- if block.settings.quote != blank -%}
                <div class="pc-testimonials__quote">{{ block.settings.quote }}</div>
              {%- endif -%}
            </div>
          </div>
        </div>
      {%- endfor -%}
    </div>
    
    <div class="pc-testimonials__nav">
      <button class="pc-testimonials__arrow pc-testimonials__arrow--prev" aria-label="Previous">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M15 18l-6-6 6-6"/>
        </svg>
      </button>
      <div class="pc-testimonials__dots"></div>
      <button class="pc-testimonials__arrow pc-testimonials__arrow--next" aria-label="Next">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M9 18l6-6-6-6"/>
        </svg>
      </button>
    </div>
  </div>
</pc-testimonials-{{ last_part }}>

<style>
  {{ sec_id }} .pc-testimonials {
    position: relative;
    width: 100%;
    padding-top: {{ section.settings.desktop_padding_top }}px;
    padding-bottom: {{ section.settings.desktop_padding_bottom }}px;
    background-color: {{ section.settings.background_color }};
    overflow: hidden;
    font-family: sans-serif;
  }

  {{ sec_id }} .pc-testimonials__container {
    max-width: {{ section.settings.max_width }}px;
    margin: 0 auto;
    padding: 0 20px;
  }

  {{ sec_id }} .pc-testimonials__heading {
    font-size: {{ section.settings.heading_font_size }}px;
    color: {{ section.settings.heading_color }};
    text-align: center;
    margin-bottom: {{ section.settings.heading_margin_bottom }}px;
    font-weight: {{ section.settings.heading_font_weight }};
  }

  {{ sec_id }} .pc-testimonials__carousel {
    display: flex;
    position: relative;
    padding: 30px 0;
    transition: transform 0.5s ease;
  }

  {{ sec_id }} .pc-testimonials__slide {
    flex: 0 0 100%;
    min-width: 0;
    padding: 0 15px;
    transition: all 0.3s ease;
    box-sizing: border-box;
  }

  {{ sec_id }} .pc-testimonials__card {
    background: transparent;
    border-radius: 0;
    padding: 0;
    text-align: center;
    width: 100%;
    height: 100%;
    margin: 0 auto;
    max-width: 800px;
  }

  {{ sec_id }} .pc-testimonials__name {
    font-size: 18px;
    color: #333;
    margin-bottom: 5px;
    line-height: 1.3;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  {{ sec_id }} .pc-testimonials__position {
    display: block;
    font-size: 14px;
    color: #666;
    font-weight: normal;
    margin-bottom: 20px;
    text-transform: none;
    letter-spacing: normal;
  }

  {{ sec_id }} .pc-testimonials__quote {
    font-size: 18px;
    color: #555;
    font-style: italic;
    line-height: 1.6;
    position: relative;
    padding: 0 20px;
  }

  {{ sec_id }} .pc-testimonials__quote::before,
  {{ sec_id }} .pc-testimonials__quote::after {
    content: '"';
    font-size: 24px;
    color: #01b0f8;
    position: absolute;
  }

  {{ sec_id }} .pc-testimonials__quote::before {
    left: 0;
    top: -5px;
  }

  {{ sec_id }} .pc-testimonials__quote::after {
    right: 0;
    bottom: -15px;
  }

  {{ sec_id }} .pc-testimonials__nav {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    margin-top: 40px;
  }

  {{ sec_id }} .pc-testimonials__arrow {
    background: transparent;
    border: none;
    cursor: pointer;
    color: #01b0f8;
    padding: 5px;
  }

  {{ sec_id }} .pc-testimonials__dots {
    display: flex;
    gap: 10px;
  }

  {{ sec_id }} .pc-testimonials__dots span {
    display: block;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #ddd;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  {{ sec_id }} .pc-testimonials__dots span.active {
    background: #01b0f8;
    width: 12px;
    height: 12px;
  }

  @media (max-width: 767px) {
    {{ sec_id }} .pc-testimonials__name {
      font-size: 16px;
    }
    
    {{ sec_id }} .pc-testimonials__position {
      font-size: 13px;
    }
    
    {{ sec_id }} .pc-testimonials__quote {
      font-size: 16px;
    }
  }
</style>

<script>
  class PcTestimonials{{ last_part | capitalize }} extends HTMLElement {
    constructor() {
      super();
      this.carousel = this.querySelector('.pc-testimonials__carousel');
      this.slides = this.querySelectorAll('.pc-testimonials__slide');
      this.prevBtn = this.querySelector('.pc-testimonials__arrow--prev');
      this.nextBtn = this.querySelector('.pc-testimonials__arrow--next');
      this.dotsContainer = this.querySelector('.pc-testimonials__dots');
      this.dots = [];
      this.currentIndex = 0;
      this.autoPlay = {{ section.settings.auto_play }};
      this.autoPlayInterval = {{ section.settings.auto_play_speed }} * 1000;
      this.autoPlayTimer = null;
      this.isAnimating = false;
      
      // Clone slides for infinite loop
      this.cloneSlides();
      this.init();
    }
    
    connectedCallback() {
      this.updateSlides();
      window.addEventListener('resize', this.handleResize.bind(this));
    }
    
    disconnectedCallback() {
      window.removeEventListener('resize', this.handleResize.bind(this));
      if (this.autoPlayTimer) {
        clearInterval(this.autoPlayTimer);
      }
    }
    
    cloneSlides() {
      // Clone first and last slides for infinite loop
      const firstClone = this.slides[0].cloneNode(true);
      const lastClone = this.slides[this.slides.length - 1].cloneNode(true);
      
      firstClone.classList.add('clone');
      lastClone.classList.add('clone');
      
      this.carousel.appendChild(firstClone);
      this.carousel.insertBefore(lastClone, this.carousel.firstChild);
      
      // Update slides reference
      this.slides = this.querySelectorAll('.pc-testimonials__slide');
    }
    
    init() {
      this.createDots();
      this.setupEventListeners();
      
      // Start at the first original slide (index 1 because we added a clone at the beginning)
      this.currentIndex = 1;
      this.updateSlides();
      
      if (this.autoPlay) {
        this.startAutoPlay();
      }
    }
    
    createDots() {
      // Clear existing dots
      this.dotsContainer.innerHTML = '';
      this.dots = [];
      
      // Create dots only for original slides (excluding clones)
      const originalSlidesCount = this.slides.length - 2; // Subtract 2 for the clones
      for (let i = 0; i < originalSlidesCount; i++) {
        const dot = document.createElement('span');
        dot.addEventListener('click', () => this.goToSlide(i + 1)); // +1 because index 0 is a clone
        this.dotsContainer.appendChild(dot);
        this.dots.push(dot);
      }
      this.updateDots();
    }
    
    updateDots() {
      const originalIndex = this.currentIndex - 1; // Adjust for clone at beginning
      const dotIndex = originalIndex % this.dots.length;
      this.dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === dotIndex);
      });
    }
    
    updateSlides() {
      if (this.isAnimating) return;
      
      this.isAnimating = true;
      
      const slideWidth = 100;
      this.carousel.style.transition = 'transform 0.5s ease';
      this.carousel.style.transform = `translateX(-${this.currentIndex * slideWidth}%)`;
      
      // Reset position after animation completes for infinite loop
      setTimeout(() => {
        this.carousel.style.transition = 'none';
        
        // If at the first clone (index 0), jump to the last original slide
        if (this.currentIndex === 0) {
          this.currentIndex = this.slides.length - 2;
          this.carousel.style.transform = `translateX(-${this.currentIndex * slideWidth}%)`;
        } 
        // If at the last clone (index length-1), jump to the first original slide
        else if (this.currentIndex === this.slides.length - 1) {
          this.currentIndex = 1;
          this.carousel.style.transform = `translateX(-${this.currentIndex * slideWidth}%)`;
        }
        
        this.isAnimating = false;
      }, 500);
      
      this.updateDots();
    }
    
    goToSlide(index) {
      this.currentIndex = index;
      this.updateSlides();
      if (this.autoPlay) {
        this.resetAutoPlay();
      }
    }
    
    nextSlide() {
      if (this.isAnimating) return;
      this.currentIndex++;
      this.updateSlides();
      if (this.autoPlay) {
        this.resetAutoPlay();
      }
    }
    
    prevSlide() {
      if (this.isAnimating) return;
      this.currentIndex--;
      this.updateSlides();
      if (this.autoPlay) {
        this.resetAutoPlay();
      }
    }
    
    setupEventListeners() {
      this.prevBtn.addEventListener('click', () => this.prevSlide());
      this.nextBtn.addEventListener('click', () => this.nextSlide());
    }
    
    startAutoPlay() {
      this.autoPlayTimer = setInterval(() => this.nextSlide(), this.autoPlayInterval);
    }
    
    resetAutoPlay() {
      clearInterval(this.autoPlayTimer);
      this.startAutoPlay();
    }
    
    handleResize() {
      // Update slides to ensure proper positioning after resize
      this.updateSlides();
    }
  }
  
  customElements.define('pc-testimonials-{{ last_part }}', PcTestimonials{{ last_part | capitalize }});
</script>

{% schema %}
{
  "name": "Testimonials Carousel",
  "class": "shopify-section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Testimonials"
    },
    {
      "type": "range",
      "id": "heading_font_size",
      "label": "Heading Font Size (Desktop)",
      "min": 10,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 30
    },
    {
      "type": "range",
      "id": "mobile_heading_font_size",
      "label": "Heading Font Size (Mobile)",
      "min": 10,
      "max": 60,
      "step": 1,
      "unit": "px",
      "default": 24
    },
    {
      "type": "range",
      "id": "heading_margin_bottom",
      "label": "Heading Margin Bottom (Desktop)",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 50
    },
    {
      "type": "range",
      "id": "mobile_heading_margin_bottom",
      "label": "Heading Margin Bottom (Mobile)",
      "min": 0,
      "max": 80,
      "step": 5,
      "unit": "px",
      "default": 30
    },
    {
      "type": "select",
      "id": "heading_font_weight",
      "label": "Heading Font Weight",
      "options": [
        { "value": "400", "label": "Normal" },
        { "value": "500", "label": "Medium" },
        { "value": "600", "label": "Semi Bold" },
        { "value": "700", "label": "Bold" }
      ],
      "default": "600"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading Color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "max_width",
      "label": "Max Width",
      "min": 500,
      "max": 2000,
      "step": 50,
      "unit": "px",
      "default": 1200
    },
    {
      "type": "range",
      "id": "desktop_padding_top",
      "label": "Top Padding (Desktop)",
      "min": 0,
      "max": 200,
      "step": 5,
      "unit": "px",
      "default": 50
    },
    {
      "type": "range",
      "id": "desktop_padding_bottom",
      "label": "Bottom Padding (Desktop)",
      "min": 0,
      "max": 200,
      "step": 5,
      "unit": "px",
      "default": 50
    },
    {
      "type": "range",
      "id": "mobile_padding_top",
      "label": "Top Padding (Mobile)",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 30
    },
    {
      "type": "range",
      "id": "mobile_padding_bottom",
      "label": "Bottom Padding (Mobile)",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 30
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Carousel Settings"
    },
    {
      "type": "checkbox",
      "id": "auto_play",
      "label": "Auto Play",
      "default": true
    },
    {
      "type": "range",
      "id": "auto_play_speed",
      "label": "Auto Play Speed (seconds)",
      "min": 1,
      "max": 10,
      "step": 1,
      "default": 3
    }
  ],
  "blocks": [
    {
      "type": "testimonial",
      "name": "Testimonial",
      "settings": [
        {
          "type": "text",
          "id": "name",
          "label": "Name",
          "default": "John Doe"
        },
        {
          "type": "text",
          "id": "position",
          "label": "Position",
          "default": "Project Manager"
        },
        {
          "type": "richtext",
          "id": "quote",
          "label": "Quote",
          "default": "<p>\"Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat\"</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Testimonials Carousel #5",
      "category": "Custom",
      "blocks": [
        {
          "type": "testimonial",
          "settings": {
            "name": "Missy Limana",
            "position": "Engineer",
            "quote": "<p>\"Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat\"</p>"
          }
        },
        {
          "type": "testimonial",
          "settings": {
            "name": "Martha Brown",
            "position": "Project Manager",
            "quote": "<p>\"Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat\"</p>"
          }
        },
        {
          "type": "testimonial",
          "settings": {
            "name": "Hanna Lisem",
            "position": "Project Manager",
            "quote": "<p>\"Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat\"</p>"
          }
        }
      ]
    }
  ]
}
{% endschema %}