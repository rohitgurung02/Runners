{%- assign sec_id = '#shopify-section-' | append: section.id -%}
{%- assign parts = sec_id | split: '_' -%}
{%- assign last_lower = parts | last -%}
{%- assign last_part = last_lower | downcase -%}

<style>
  {{ sec_id }} .pc-animation-section-{{ last_part }} {
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    min-height: 100svh;
    text-rendering: optimizeSpeed;
    background-color: {{ section.settings.background_color }};
    color: {{ section.settings.text_color }};
    padding: {{ section.settings.desktop_padding }}px;
  }

  {{ sec_id }} .pc-animation-heading-{{ last_part }} {
    font-size: {{ section.settings.heading_text }}px;
    font-weight: {{ section.settings.heading_font_weight }};
    text-decoration: {{ section.settings.heading_text_decoration }};
    text-decoration-color: {{ section.settings.heading_text_decoration_color }};
    padding-top: {{ section.settings.heading_padding_top }}px;
    padding-bottom: {{ section.settings.heading_padding_bottom }}px;
    margin: 0;
  }

  {{ sec_id }} .pc-animation-title-{{ last_part }} {
  font-size: {{ section.settings.title_text }}px !important;
  font-weight: {{ section.settings.title_font_weight }};
  text-decoration: {{ section.settings.title_text_decoration }};
  text-decoration-color: {{ section.settings.title_text_decoration_color }};
  margin: 0;
}

  {{ sec_id }} .pc-animation-grid-{{ last_part }} {
    margin: 0 auto;
    padding: 20px;
    width: 100%;
    max-width: 1200px;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 20px;
    justify-content: center;
    container-type: inline-size;
  }

  {{ sec_id }} .pc-animation-item-{{ last_part }} {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 200px;
    padding: 20px;
    container-type: inline-size;
    border-radius: 1cqw;
    background: {{ section.settings.card_background }};
    color: {{ section.settings.card_text }};
    transition: background-color .25s ease-out;
  }

  {{ sec_id }} .pc-animation-item-{{ last_part }}:hover {
    cursor: default;
    background: {{ section.settings.card_hover_background }};
    color: #fff;
    z-index: 99;
  }

  {{ sec_id }} .pc-animation-item-{{ last_part }} h2 {
    text-align: center;
    font-size: clamp(20px, 8cqw, 30px);
    will-change: transform;
  }

  {{ sec_id }} .pc-face-{{ last_part }} {
    position: absolute;
    left: 0;
    opacity: 0;
  }

  {{ sec_id }} .pc-face-front-{{ last_part }} {
    opacity: 1;
  }

  {{ sec_id }} .pc-face-bottom-{{ last_part }} {
    top: 100%;
    transform-origin: 50% 0%;
    transform: rotateX(90deg);
  }

  {{ sec_id }} .pc-face-top-{{ last_part }} {
    bottom: 100%;
    transform-origin: 50% 100%;
    transform: rotateX(-90deg);
  }

  {{ sec_id }} .pc-face-back-{{ last_part }} {
    top: 0;
    transform-origin: 50% 50%;
    transform: translateZ(2.5rem) rotateX(-180deg);
  }

  @media (max-width: 768px) {
    {{ sec_id }} {
      padding: {{ section.settings.mobile_padding }}px;
    }

    {{ sec_id }} .pc-animation-heading-{{ last_part }} {
      font-size: {{ section.settings.heading_text_mobile }}px;
    }

    {{ sec_id }} .pc-animation-title-{{ last_part }} {
    font-size: {{ section.settings.title_mobile }}px !important;
  }
  }
</style>

<div class="pc-animation-section-{{ last_part }}">
<h1 class="pc-animation-heading-{{ last_part }}">{{ section.settings.heading }}</h1>
<div class="pc-animation-grid-{{ last_part }}">
  {% for block in section.blocks %}
    <div class="pc-animation-item-{{ last_part }}" 
         id="pc-{{ block.settings.animation_type | handleize }}-{{ last_part }}" 
         {{ block.shopify_attributes }}>
      <h2 class="pc-animation-title-{{ last_part }}" style="color: {{ block.settings.title_color }};">{{ block.settings.title }}</h2>
    </div>
  {% endfor %}
</div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const sectionId = '{{ sec_id }}';
    const lastPart = '{{ last_part }}';
    
    // Animation initialization functions
    const animationHandlers = {
      horizontal_split: function(root, heading) {
        const text = heading.textContent;
        heading.innerHTML = '';
        
        text.split('').forEach((char, i) => {
          const span = document.createElement('span');
          span.className = `pc-char-${lastPart}`;
          span.style.display = 'inline-block';
          span.style.overflow = 'hidden';
          
          const innerSpan = document.createElement('span');
          innerSpan.textContent = char;
          innerSpan.style.display = 'inline-block';
          innerSpan.style.transform = 'translateX(0)';
          innerSpan.style.transition = 'transform 0.4s cubic-bezier(0.16, 1, 0.3, 1)';
          
          span.appendChild(innerSpan);
          heading.appendChild(span);
          
          span.addEventListener('mouseenter', () => {
            innerSpan.style.transform = 'translateX(100%)';
          });
          
          span.addEventListener('mouseleave', () => {
            innerSpan.style.transform = 'translateX(0)';
          });
        });
      },
      
      wavy_text: function(root, heading) {
        const text = heading.textContent;
        heading.innerHTML = '';
        
        text.split('').forEach((char, i) => {
          const span = document.createElement('span');
          span.className = `pc-wavy-char-${lastPart}`;
          span.textContent = char;
          span.style.display = 'inline-block';
          span.style.transform = 'translateY(0)';
          span.style.transition = 'transform 0.5s cubic-bezier(0.5, 0, 0.5, 1)';
          
          heading.appendChild(span);
          
          root.addEventListener('mouseenter', () => {
            const delay = i * 50;
            setTimeout(() => {
              span.style.transform = 'translateY(-50%)';
              setTimeout(() => {
                span.style.transform = 'translateY(50%)';
                setTimeout(() => {
                  span.style.transform = 'translateY(0)';
                }, 250);
              }, 250);
            }, delay);
          });
        });
      },
      
      raining_letters:  function(root, heading) {
        const text = heading.textContent;
        heading.innerHTML = '';
        
        text.split('').forEach((char, i) => {
          const span = document.createElement('span');
          span.className = `pc-rain-char-${lastPart}`;
          span.textContent = char;
          span.style.display = 'inline-block';
          span.style.transform = 'translateY(0)';
          span.style.transition = 'transform 0.5s cubic-bezier(0.5, 0, 0.5, 1)';
          
          heading.appendChild(span);
          
          root.addEventListener('mouseenter', () => {
            const delay = i * 50;
            setTimeout(() => {
              span.style.transform = 'translateY(100%)';
              setTimeout(() => {
                span.style.transform = 'translateX(0%)';
                setTimeout(() => {
                  span.style.transform = 'translateX(0)';
                }, 250);
              }, 350);
            }, delay);
          });
        });
      },
      
      subtle_highlight: function(root, heading) {
        const text = heading.textContent;
        heading.innerHTML = '';
        
        text.split('').forEach((char, i) => {
          const span = document.createElement('span');
          span.className = `pc-highlight-char-${lastPart}`;
          span.textContent = char;
          span.style.opacity = '0.25';
          span.style.transition = 'opacity 0.35s cubic-bezier(0.34, 1.56, 0.64, 1), text-shadow 0.35s cubic-bezier(0.34, 1.56, 0.64, 1)';
          
          heading.appendChild(span);
          
          root.addEventListener('mouseenter', () => {
            setTimeout(() => {
              span.style.opacity = '1';
              span.style.textShadow = '0 0 30px rgba(255,255,255,0.9)';
            }, i * 12);
          });
          
          root.addEventListener('mouseleave', () => {
            setTimeout(() => {
              span.style.opacity = '0.25';
              span.style.textShadow = 'none';
            }, i * 12);
          });
        });
      },
      
      words_3d: function(root, heading) {
        const text = heading.textContent;
        heading.innerHTML = '';
        
        text.split('').forEach((char, i) => {
          const wordWrapper = document.createElement('span');
          wordWrapper.className = `pc-word-3d-${lastPart} pc-word-${i}-${lastPart}`;
          
          const faceTop = document.createElement('em');
          faceTop.className = `pc-face-${lastPart} pc-face-top-${lastPart}`;
          faceTop.textContent = char;
          
          const faceFront = document.createElement('em');
          faceFront.className = `pc-face-${lastPart} pc-face-front-${lastPart}`;
          faceFront.textContent = char;
          
          const faceBottom = document.createElement('em');
          faceBottom.className = `pc-face-${lastPart} pc-face-bottom-${lastPart}`;
          faceBottom.textContent = char;
          
          const faceBack = document.createElement('em');
          faceBack.className = `pc-face-${lastPart} pc-face-back-${lastPart}`;
          faceBack.textContent = char;
          
          wordWrapper.appendChild(faceTop);
          wordWrapper.appendChild(faceFront);
          wordWrapper.appendChild(faceBottom);
          wordWrapper.appendChild(faceBack);
          
          heading.appendChild(wordWrapper);
          
          wordWrapper.addEventListener('mouseenter', () => {
            wordWrapper.style.transform = 'rotateX(-180deg)';
            faceTop.style.opacity = '0';
            faceFront.style.opacity = '0';
            faceBottom.style.opacity = '1';
            faceBack.style.opacity = '1';
          });
          
          wordWrapper.addEventListener('mouseleave', () => {
            wordWrapper.style.transform = 'rotateX(0)';
            faceTop.style.opacity = '0';
            faceFront.style.opacity = '1';
            faceBottom.style.opacity = '0';
            faceBack.style.opacity = '0';
          });
        });
      },
      
      exploding_characters: function(root, heading) {
        const text = heading.textContent;
        heading.innerHTML = '';
        
        text.split('').forEach((char, i) => {
          const span = document.createElement('span');
          span.className = `pc-explode-char-${lastPart}`;
          span.textContent = char;
          span.style.display = 'inline-block';
          span.style.transform = 'translate(0, 0) rotate(0)';
          span.style.transition = 'transform 0.75s cubic-bezier(0.34, 1.56, 0.64, 1)';
          
          heading.appendChild(span);
          
          root.addEventListener('mouseenter', () => {
            const x = (Math.random() * 6 - 3) + 'rem';
            const y = (Math.random() * 10 - 5) + 'rem';
            const rotate = (Math.random() * 360 - 180) + 'deg';
            setTimeout(() => {
              span.style.transform = `translate(${x}, ${y}) rotate(${rotate})`;
            }, Math.random() * 300);
          });
          
          root.addEventListener('mouseleave', () => {
            setTimeout(() => {
              span.style.transform = 'translate(0, 0) rotate(0)';
            }, Math.random() * 300);
          });
        });
      }
    };
    
    // Initialize animations based on block types
    {% for block in section.blocks %}
      const block{{ forloop.index }} = document.querySelector(`${sectionId} #pc-{{ block.settings.animation_type | handleize }}-${lastPart}`);
      if (block{{ forloop.index }}) {
        const heading = block{{ forloop.index }}.querySelector('h2');
        if (heading) {
          const animationType = '{{ block.settings.animation_type | handleize }}';
          if (animationHandlers[animationType]) {
            animationHandlers[animationType](block{{ forloop.index }}, heading);
          }
        }
      }
    {% endfor %}
  });
</script>

{% schema %}
{
  "name": "RW - Text Animation #1",
  "settings": [
    {
      "type": "header",
      "content": "Heading"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Heading"
    },
    {
      "type": "header",
      "content": "Color Settings"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card Background",
      "default": "#5E3653"
    },
    {
      "type": "color",
      "id": "card_text",
      "label": "Card Text Color",
      "default": "#D0D0D0"
    },
    {
      "type": "color",
      "id": "card_hover_background",
      "label": "Card Hover Background",
      "default": "#D777BB"
    },
    {
      "type": "header",
      "content": "Typography Settings"
    },
    {
      "type": "header",
      "content": "Heading"
    },
    {
        "type": "range",
        "id": "heading_text",
        "label": "Heading Text (Desktop)",
        "min": 10,
        "max": 80,
        "step": 1,
        "unit": "px",
        "default": 30
      },
      {
        "type": "range",
        "id": "heading_text_mobile",
        "label": "Heading Text (Mobile)",
        "min": 10,
        "max": 75,
        "step": 1,
        "unit": "px",
        "default": 25
      },
      {
        "type": "select",
        "id": "heading_font_weight",
        "label": "Heading Text Font weight",
        "options": [
          {
            "value": "normal",
            "label": "Normal"
          },
          {
            "value": "bold",
            "label": "Bold"
          },
          {
            "value": "bolder",
            "label": "Bolder"
          },
          {
            "value": "lighter",
            "label": "Lighter"
          },
          {
            "value": "100",
            "label": "100"
          },
          {
            "value": "200",
            "label": "200"
          },
          {
            "value": "300",
            "label": "300"
          },
          {
            "value": "400",
            "label": "400"
          },
          {
            "value": "500",
            "label": "500"
          },
          {
            "value": "600",
            "label": "600"
          },
          {
            "value": "700",
            "label": "700"
          },
          {
            "value": "800",
            "label": "800"
          },
          {
            "value": "900",
            "label": "900"
          }
        ],
        "default": "normal"
      },
      {
        "type": "select",
        "id": "heading_text_decoration",
        "label": "Heading Text Decoration",
        "options": [
          {
            "value": "none",
            "label": "None"
          },
          {
            "value": "underline",
            "label": "Underline"
          },
          {
            "value": "overline",
            "label": "Overline"
          },
          {
            "value": "line-through",
            "label": "Line Through"
          }
        ],
        "default": "none"
      },
      {
        "type": "color",
        "id": "heading_text_decoration_color",
        "label": "Heading Text Decoration Color",
        "default": "#000"
      },
      {
        "type": "range",
        "id": "heading_padding_top",
        "label": "Heading Text Padding Top (px)",
        "default": 0,
        "min": 0,
        "max": 150,
        "step": 5
      },
      {
        "type": "range",
        "id": "heading_padding_bottom",
        "label": "Heading Text Padding Bottom (px)",
        "default": 0,
        "min": 0,
        "max": 150,
        "step": 5
      },
      {
      "type": "header",
      "content": "Card Title"
    },
     {
        "type": "range",
        "id": "title_text",
        "label": "Card Text (Desktop)",
        "min": 10,
        "max": 80,
        "step": 1,
        "unit": "px",
        "default": 30
      },
      {
        "type": "range",
        "id": "title_mobile",
        "label": "Card Text (Mobile)",
        "min": 10,
        "max": 75,
        "step": 1,
        "unit": "px",
        "default": 23
      },
      {
        "type": "select",
        "id": "title_font_weight",
        "label": "Card Text Font weight",
        "options": [
          {
            "value": "normal",
            "label": "Normal"
          },
          {
            "value": "bold",
            "label": "Bold"
          },
          {
            "value": "bolder",
            "label": "Bolder"
          },
          {
            "value": "lighter",
            "label": "Lighter"
          },
          {
            "value": "100",
            "label": "100"
          },
          {
            "value": "200",
            "label": "200"
          },
          {
            "value": "300",
            "label": "300"
          },
          {
            "value": "400",
            "label": "400"
          },
          {
            "value": "500",
            "label": "500"
          },
          {
            "value": "600",
            "label": "600"
          },
          {
            "value": "700",
            "label": "700"
          },
          {
            "value": "800",
            "label": "800"
          },
          {
            "value": "900",
            "label": "900"
          }
        ],
        "default": "normal"
      },
      {
        "type": "select",
        "id": "title_text_decoration",
        "label": "Card Text Decoration",
        "options": [
          {
            "value": "none",
            "label": "None"
          },
          {
            "value": "underline",
            "label": "Underline"
          },
          {
            "value": "overline",
            "label": "Overline"
          },
          {
            "value": "line-through",
            "label": "Line Through"
          }
        ],
        "default": "none"
      },
      {
        "type": "color",
        "id": "title_text_decoration_color",
        "label": "Card Text Decoration Color",
        "default": "#000"
      },
    {
      "type": "header",
      "content": "Spacing Settings"
    },
    {
      "type": "range",
      "id": "desktop_padding",
      "label": "Desktop Padding",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 20
    },
    {
      "type": "range",
      "id": "mobile_padding",
      "label": "Mobile Padding",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 10
    }
  ],
  "blocks": [
    {
      "type": "animation",
      "name": "Animation Card",
      "settings": [
        {
          "type": "select",
          "id": "animation_type",
          "label": "Animation Type",
          "options": [
            {
              "value": "horizontal_split",
              "label": "Horizontal Split"
            },
            {
              "value": "wavy_text",
              "label": "Wavy Text"
            },
            {
              "value": "raining_letters",
              "label": "Raining Letters"
            },
            {
              "value": "subtle_highlight",
              "label": "Subtitle Highlight"
            },
            {
              "value": "exploding_characters",
              "label": "Exploding Characters"
            }
          ],
          "default": "horizontal_split"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Animation Title"
        },
         {
          "type": "color",
          "id": "title_color",
          "label": "Title Color",
          "default": "#FFFFFF"
        },
      ]
    }
  ],
  "presets": [
    {
      "name": "RW - Text Animation #1",
      "category": "Custom",
      "blocks": [
        {
          "type": "animation",
          "settings": {
            "animation_type": "horizontal_split",
            "title": "Horizontal split"
          }
        },
        {
          "type": "animation",
          "settings": {
            "animation_type": "wavy_text",
            "title": "Waaaaavvvvy"
          }
        },
        {
          "type": "animation",
          "settings": {
            "animation_type": "raining_letters",
            "title": "Raining letters"
          }
        },
        {
          "type": "animation",
          "settings": {
            "animation_type": "subtle_highlight",
            "title": "Subtle text highlight"
          }
        },
        {
          "type": "animation",
          "settings": {
            "animation_type": "exploding_characters",
            "title": "Exploding characters"
          }
        }
      ]
    }
  ]
}
{% endschema %}