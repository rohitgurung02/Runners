{%- assign sec_id = '#shopify-section-' | append: section.id -%}
{%- assign parts = sec_id | split: '_' -%}
{%- assign last_lower = parts | last -%}
{%- assign last_part = last_lower | downcase -%}

<pc-testimonial-slider-{{ last_part }} class="pc-testimonial-slider-{{ last_part }}">
  <div class="pc-testimonial-wrapper-{{ last_part }}">
    <div class="pc-testimonial-track-{{ last_part }}">
      {% for block in section.blocks %}
        <div class="pc-testimonial-slide-{{ last_part }} {% if forloop.first %}pc-active-{{ last_part }}{% endif %}" {{ block.shopify_attributes }} data-index="{{ forloop.index0 }}">
          <div class="pc-testimonial-container-{{ last_part }}">
            <div class="pc-progress-bar-{{ last_part }}"></div>
            
            <svg class="pc-quote-left-{{ last_part }}" width="28" height="28" viewBox="0 0 24 24" fill="none">
              <path d="M3.692 16.132C2.292 13.72 2.58 10.468 3.12 7.78C3.36 6.6 4.092 5.92 5.268 5.848C6.804 5.92 7.92 7.132 7.92 8.668C7.92 10.468 6.444 11.8 4.644 11.8C4.5 11.8 4.356 11.8 4.284 11.8C4.5 13.24 5.34 14.536 6.588 15.4C7.62 16.12 8.94 16.48 10.26 16.48C10.404 16.48 10.476 16.48 10.62 16.48C10.404 17.848 9.996 19.144 9.348 20.296C8.388 22 7.14 22.936 5.34 22.72C4.14 22.576 3.12 21.928 2.46 20.92C2.1 20.368 1.956 19.744 2.028 19.12C2.1 18.28 2.532 17.512 3.18 16.984C3.324 16.84 3.54 16.48 3.692 16.132Z" fill="currentColor"/>
              <path d="M15.036 16.132C13.636 13.72 13.924 10.468 14.464 7.78C14.704 6.6 15.436 5.92 16.612 5.848C18.148 5.92 19.264 7.132 19.264 8.668C19.264 10.468 17.788 11.8 15.988 11.8C15.844 11.8 15.7 11.8 15.628 11.8C15.844 13.24 16.684 14.536 17.932 15.4C18.964 16.12 20.284 16.48 21.604 16.48C21.748 16.48 21.82 16.48 21.964 16.48C21.748 17.848 21.34 19.144 20.692 20.296C19.732 22 18.484 22.936 16.684 22.72C15.484 22.576 14.464 21.928 13.804 20.92C13.444 20.368 13.3 19.744 13.372 19.12C13.444 18.28 13.876 17.512 14.524 16.984C14.668 16.84 14.884 16.48 15.036 16.132Z" fill="currentColor"/>
            </svg>
            
            <svg class="pc-quote-right-{{ last_part }}" width="28" height="28" viewBox="0 0 24 24" fill="none">
              <path d="M20.308 7.868C21.708 10.28 21.42 13.532 20.88 16.22C20.64 17.4 19.908 18.08 18.732 18.152C17.196 18.08 16.08 16.868 16.08 15.332C16.08 13.532 17.556 12.2 19.356 12.2C19.5 12.2 19.644 12.2 19.716 12.2C19.5 10.76 18.66 9.464 17.412 8.6C16.38 7.88 15.06 7.52 13.74 7.52C13.596 7.52 13.524 7.52 13.38 7.52C13.596 6.152 14.004 4.856 14.652 3.704C15.612 2 16.86 1.064 18.66 1.28C19.86 1.424 20.88 2.072 21.54 3.08C21.9 3.632 22.044 4.256 21.972 4.88C21.9 5.72 21.468 6.488 20.82 7.016C20.676 7.16 20.46 7.52 20.308 7.868Z" fill="currentColor"/>
              <path d="M8.96401 7.868C10.364 10.28 10.076 13.532 9.53601 16.22C9.29601 17.4 8.56401 18.08 7.38801 18.152C5.85201 18.08 4.73601 16.868 4.73601 15.332C4.73601 13.532 6.21201 12.2 8.01201 12.2C8.15601 12.2 8.30001 12.2 8.37201 12.2C8.15601 10.76 7.31601 9.464 6.06801 8.6C5.03601 7.88 3.71601 7.52 2.39601 7.52C2.25201 7.52 2.18001 7.52 2.03601 7.52C2.25201 6.152 2.66001 4.856 3.30801 3.704C4.26801 2 5.51601 1.064 7.31601 1.28C8.51601 1.424 9.53601 2.072 10.196 3.08C10.556 3.632 10.7 4.256 10.628 4.88C10.556 5.72 10.124 6.488 9.47601 7.016C9.33201 7.16 9.11601 7.52 8.96401 7.868Z" fill="currentColor"/>
            </svg>
            
            <p class="pc-testimonial-text-{{ last_part }}">
              {{ block.settings.text }}
            </p>
            
            <div class="pc-user-container-{{ last_part }}">
              {%- if block.settings.image != blank -%}
                {% assign image_class = 'pc-user-image-' | append: last_part %}
                {{ 
                  block.settings.image
                  | image_url: width: 150
                  | image_tag: 
                      loading: 'lazy', 
                      class: image_class,
                      alt: block.settings.name
                }}
              {%- else -%}
                {% assign placeholder_class = 'pc-user-image-placeholder-' | append: last_part %}
                {{ 'product-1' | placeholder_svg_tag: placeholder_class }}
              {%- endif -%}
              
              <div class="pc-user-details-{{ last_part }}">
                <h4 class="pc-username-{{ last_part }}">{{ block.settings.name }}</h4>
                <p class="pc-user-role-{{ last_part }}">{{ block.settings.role }}</p>
              </div>
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
    
    {% if section.blocks.size > 1 %}
      <div class="pc-slider-controls-{{ last_part }}">
        <button class="pc-slider-prev-{{ last_part }}" aria-label="Previous testimonial">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
        
        <div class="pc-slider-dots-{{ last_part }}">
          {% for block in section.blocks %}
            <button class="pc-slider-dot-{{ last_part }} {% if forloop.first %}pc-active-{{ last_part }}{% endif %}" data-index="{{ forloop.index0 }}" aria-label="Go to testimonial {{ forloop.index }}"></button>
          {% endfor %}
        </div>
        
        <button class="pc-slider-next-{{ last_part }}" aria-label="Next testimonial">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>
    {% endif %}
  </div>
</pc-testimonial-slider-{{ last_part }}>

<style>
  {{ sec_id }} {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 10px;
  }
  
  {{ sec_id }} .pc-testimonial-slider-{{ last_part }} {
    width: 100%;
    max-width: {{ section.settings.max_width_desktop }}px;
    margin: 0 auto;
  }
  
  {{ sec_id }} .pc-testimonial-wrapper-{{ last_part }} {
    position: relative;
    overflow: hidden;
  }
  
  {{ sec_id }} .pc-testimonial-track-{{ last_part }} {
    display: flex;
    transition: transform 0.5s ease;
  }
  
  {{ sec_id }} .pc-testimonial-slide-{{ last_part }} {
    flex: 0 0 100%;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.5s ease, visibility 0.5s ease;
  }
  
  {{ sec_id }} .pc-testimonial-slide-{{ last_part }}.pc-active-{{ last_part }} {
    opacity: 1;
    visibility: visible;
  }
  
  {{ sec_id }} .pc-testimonial-container-{{ last_part }} {
    background-color: {{ section.settings.background_color }};
    color: {{ section.settings.text_color }};
    border-radius: {{ section.settings.border_radius }}px;
    margin: {{ section.settings.margin_vertical_desktop }}px auto;
    padding: {{ section.settings.padding_vertical_desktop }}px {{ section.settings.padding_horizontal_desktop }}px;
    position: relative;
    {% if section.settings.enable_shadow %}
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    {% endif %}
  }
  
  {{ sec_id }} .pc-quote-left-{{ last_part }},
  {{ sec_id }} .pc-quote-right-{{ last_part }} {
    color: {{ section.settings.quote_color }};
    position: absolute;
    top: {{ section.settings.quote_position_top }}px;
    width: {{ section.settings.quote_size }}px;
    height: {{ section.settings.quote_size }}px;
  }
  
  {{ sec_id }} .pc-quote-left-{{ last_part }} {
    left: {{ section.settings.quote_position_sides }}px;
  }
  
  {{ sec_id }} .pc-quote-right-{{ last_part }} {
    right: {{ section.settings.quote_position_sides }}px;
  }
  
  {{ sec_id }} .pc-testimonial-text-{{ last_part }} {
    line-height: {{ section.settings.text_line_height }};
    text-align: justify;
    font-size: {{ section.settings.text_font_size_desktop }}px;
    margin: 0 0 {{ section.settings.text_margin_bottom }}px 0;
  }
  
  {{ sec_id }} .pc-user-container-{{ last_part }} {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: {{ section.settings.user_margin_top }}px;
  }
  
  {{ sec_id }} .pc-user-image-{{ last_part }} {
    border-radius: 50%;
    height: {{ section.settings.image_size }}px;
    width: {{ section.settings.image_size }}px;
    object-fit: cover;
  }
  
  {{ sec_id }} .pc-user-image-placeholder-{{ last_part }} {
    border-radius: 50%;
    height: {{ section.settings.image_size }}px;
    width: {{ section.settings.image_size }}px;
    background-color: #f4f4f4;
  }
  
  {{ sec_id }} .pc-user-details-{{ last_part }} {
    margin-left: {{ section.settings.user_details_margin_left }}px;
  }
  
  {{ sec_id }} .pc-username-{{ last_part }} {
    margin: 0;
    font-size: {{ section.settings.name_font_size_desktop }}px;
    font-weight: {{ section.settings.name_font_weight }};
    color: {{ section.settings.name_text_color }};
  }
  
  {{ sec_id }} .pc-user-role-{{ last_part }} {
    margin: {{ section.settings.role_margin_top }}px 0 0 0;
    font-size: {{ section.settings.role_font_size_desktop }}px;
    font-weight: {{ section.settings.role_font_weight }};
  }
  
  {{ sec_id }} .pc-progress-bar-{{ last_part }} {
    background-color: {{ section.settings.progress_bar_color }};
    height: {{ section.settings.progress_bar_height }}px;
    width: 100%;
    transform-origin: left;
    animation: pc-grow-{{ last_part }} {{ section.settings.animation_duration }}s linear infinite;
    border-radius: {{ section.settings.progress_bar_height }}px;
  }
  
  {{ sec_id }} .pc-slider-controls-{{ last_part }} {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 20px;
    gap: 20px;
  }
  
  {{ sec_id }} .pc-slider-prev-{{ last_part }},
  {{ sec_id }} .pc-slider-next-{{ last_part }} {
    background: {{ section.settings.arrow_background }};
    border: {{ section.settings.arrow_border_width }}px solid {{ section.settings.arrow_border_color }};
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    color: {{ section.settings.arrow_color }};
    transition: all 0.3s ease;
  }
  
  {{ sec_id }} .pc-slider-prev-{{ last_part }}:hover,
  {{ sec_id }} .pc-slider-next-{{ last_part }}:hover {
    background: {{ section.settings.arrow_hover_background }};
    color: {{ section.settings.arrow_hover_color }};
  }
  
  {{ sec_id }} .pc-slider-dots-{{ last_part }} {
    display: flex;
    gap: 10px;
  }
  
  {{ sec_id }} .pc-slider-dot-{{ last_part }} {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: {{ section.settings.dot_color }};
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  {{ sec_id }} .pc-slider-dot-{{ last_part }}.pc-active-{{ last_part }} {
    background: {{ section.settings.dot_active_color }};
    transform: scale(1.2);
  }
  
  @keyframes pc-grow-{{ last_part }} {
    0% {
      transform: scaleX(0);
    }
    100% {
      transform: scaleX(1);
    }
  }
  
  @media (max-width: 768px) {
    {{ sec_id }} .pc-testimonial-slider-{{ last_part }} {
      max-width: {{ section.settings.max_width_mobile }}px;
    }
    
    {{ sec_id }} .pc-testimonial-container-{{ last_part }} {
      padding: {{ section.settings.padding_vertical_mobile }}px {{ section.settings.padding_horizontal_mobile }}px;
      margin: {{ section.settings.margin_vertical_mobile }}px auto;
    }
    
    {{ sec_id }} .pc-quote-left-{{ last_part }},
    {{ sec_id }} .pc-quote-right-{{ last_part }} {
      display: {{ section.settings.show_quotes_mobile }};
    }
    
    {{ sec_id }} .pc-testimonial-text-{{ last_part }} {
      font-size: {{ section.settings.text_font_size_mobile }}px;
    }
    
    {{ sec_id }} .pc-username-{{ last_part }} {
      font-size: {{ section.settings.name_font_size_mobile }}px;
    }
    
    {{ sec_id }} .pc-user-role-{{ last_part }} {
      font-size: {{ section.settings.role_font_size_mobile }}px;
    }
    
    {{ sec_id }} .pc-slider-controls-{{ last_part }} {
      flex-wrap: wrap;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sliderElement = document.querySelector('pc-testimonial-slider-{{ last_part }}');
  if (!sliderElement) return;
  
  const track = sliderElement.querySelector('.pc-testimonial-track-{{ last_part }}');
  const slides = sliderElement.querySelectorAll('.pc-testimonial-slide-{{ last_part }}');
  const dots = sliderElement.querySelectorAll('.pc-slider-dot-{{ last_part }}');
  const prevButton = sliderElement.querySelector('.pc-slider-prev-{{ last_part }}');
  const nextButton = sliderElement.querySelector('.pc-slider-next-{{ last_part }}');
  const progressBars = sliderElement.querySelectorAll('.pc-progress-bar-{{ last_part }}');
  
  if (slides.length <= 1) return;
  
  let currentIndex = 0;
  let autoPlayInterval;
  
  // Function to update slide position
  function updateSlidePosition() {
    track.style.transform = `translateX(-${currentIndex * 100}%)`;
    
    // Update active classes
    slides.forEach((slide, index) => {
      if (index === currentIndex) {
        slide.classList.add('pc-active-{{ last_part }}');
      } else {
        slide.classList.remove('pc-active-{{ last_part }}');
      }
    });
    
    // Update dots
    dots.forEach((dot, index) => {
      if (index === currentIndex) {
        dot.classList.add('pc-active-{{ last_part }}');
      } else {
        dot.classList.remove('pc-active-{{ last_part }}');
      }
    });
    
    // Reset and restart progress bars
    progressBars.forEach(bar => {
      bar.style.animation = 'none';
      void bar.offsetWidth; // Trigger reflow
      bar.style.animation = `pc-grow-{{ last_part }} {{ section.settings.animation_duration }}s linear infinite`;
    });
  }
  
  // Function to go to a specific slide
  function goToSlide(index) {
    if (index < 0) {
      currentIndex = slides.length - 1;
    } else if (index >= slides.length) {
      currentIndex = 0;
    } else {
      currentIndex = index;
    }
    updateSlidePosition();
  }
  
  // Function to go to next slide
  function nextSlide() {
    goToSlide(currentIndex + 1);
  }
  
  // Function to start autoplay
  function startAutoplay() {
    if (autoPlayInterval) clearInterval(autoPlayInterval);
    autoPlayInterval = setInterval(nextSlide, {{ section.settings.rotation_interval | times: 1000 }});
  }
  
  // Initialize the slider
  updateSlidePosition();
  startAutoplay();
  
  // Event listeners for navigation
  if (prevButton) {
    prevButton.addEventListener('click', function() {
      goToSlide(currentIndex - 1);
      startAutoplay(); // Reset autoplay timer on manual navigation
    });
  }
  
  if (nextButton) {
    nextButton.addEventListener('click', function() {
      nextSlide();
      startAutoplay(); // Reset autoplay timer on manual navigation
    });
  }
  
  // Event listeners for dots
  dots.forEach(dot => {
    dot.addEventListener('click', function() {
      const index = parseInt(this.getAttribute('data-index'));
      goToSlide(index);
      startAutoplay(); // Reset autoplay timer on manual navigation
    });
  });
  
  // Pause autoplay on hover
  sliderElement.addEventListener('mouseenter', function() {
    if (autoPlayInterval) clearInterval(autoPlayInterval);
  });
  
  sliderElement.addEventListener('mouseleave', function() {
    startAutoplay();
  });
  
  // Touch events for mobile swipe
  let touchStartX = 0;
  let touchEndX = 0;
  
  sliderElement.addEventListener('touchstart', function(e) {
    touchStartX = e.changedTouches[0].screenX;
  });
  
  sliderElement.addEventListener('touchend', function(e) {
    touchEndX = e.changedTouches[0].screenX;
    handleSwipe();
  });
  
  function handleSwipe() {
    const swipeThreshold = 50;
    
    if (touchEndX < touchStartX - swipeThreshold) {
      // Swipe left - next slide
      nextSlide();
      startAutoplay();
    } else if (touchEndX > touchStartX + swipeThreshold) {
      // Swipe right - previous slide
      goToSlide(currentIndex - 1);
      startAutoplay();
    }
  }
});
</script>

{% schema %}
{
  "name": "Testimonial Slider #8",
  "class": "pc-testimonial-slider",
  "max_blocks": 6,
  "settings": [
    {
      "type": "header",
      "content": "General Settings"
    },
    {
      "type": "range",
      "id": "max_width_desktop",
      "label": "Max Width (Desktop)",
      "min": 600,
      "max": 1200,
      "step": 50,
      "unit": "px",
      "default": 1000
    },
    {
      "type": "range",
      "id": "max_width_mobile",
      "label": "Max Width (Mobile)",
      "min": 300,
      "max": 600,
      "step": 10,
      "unit": "px",
      "default": 400
    },
    {
      "type": "range",
      "id": "rotation_interval",
      "label": "Rotation Interval (seconds)",
      "min": 3,
      "max": 30,
      "step": 1,
      "unit": "sec",
      "default": 10
    },
    {
      "type": "header",
      "content": "Style Settings"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#476ce4"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "name_text_color",
      "label": "Name Font Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "quote_color",
      "label": "Quote Color",
      "default": "rgba(255, 255, 255, 0.3)"
    },
    {
      "type": "color",
      "id": "progress_bar_color",
      "label": "Progress Bar Color",
      "default": "#ffffff"
    },
    {
      "type": "checkbox",
      "id": "enable_shadow",
      "label": "Enable Shadow",
      "default": false
    },
    {
      "type": "range",
      "id": "border_radius",
      "label": "Border Radius",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "default": 15
    },
    {
      "type": "header",
      "content": "Navigation Settings"
    },
    {
      "type": "color",
      "id": "arrow_color",
      "label": "Arrow Color",
      "default": "#476ce4"
    },
    {
      "type": "color",
      "id": "arrow_hover_color",
      "label": "Arrow Hover Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "arrow_background",
      "label": "Arrow Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "arrow_hover_background",
      "label": "Arrow Hover Background",
      "default": "#476ce4"
    },
    {
      "type": "color",
      "id": "arrow_border_color",
      "label": "Arrow Border Color",
      "default": "#f0f0f0"
    },
    {
      "type": "range",
      "id": "arrow_border_width",
      "label": "Arrow Border Width",
      "min": 0,
      "max": 3,
      "step": 1,
      "unit": "px",
      "default": 1
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot Color",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Dot Active Color",
      "default": "#476ce4"
    },
    {
      "type": "header",
      "content": "Typography Settings"
    },
    {
      "type": "range",
      "id": "text_font_size_desktop",
      "label": "Text Font Size (Desktop)",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "default": 16
    },
    {
      "type": "range",
      "id": "text_font_size_mobile",
      "label": "Text Font Size (Mobile)",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "default": 14
    },
    {
      "type": "range",
      "id": "name_font_size_desktop",
      "label": "Name Font Size (Desktop)",
      "min": 16,
      "max": 30,
      "step": 1,
      "unit": "px",
      "default": 18
    },
    {
      "type": "range",
      "id": "name_font_size_mobile",
      "label": "Name Font Size (Mobile)",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "default": 16
    },
    {
      "type": "select",
      "id": "name_font_weight",
      "label": "Name Font Weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "600",
          "label": "Semi-Bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "600"
    },
    {
      "type": "range",
      "id": "role_font_size_desktop",
      "label": "Role Font Size (Desktop)",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "default": 14
    },
    {
      "type": "range",
      "id": "role_font_size_mobile",
      "label": "Role Font Size (Mobile)",
      "min": 10,
      "max": 18,
      "step": 1,
      "unit": "px",
      "default": 12
    },
    {
      "type": "select",
      "id": "role_font_weight",
      "label": "Role Font Weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "600",
          "label": "Semi-Bold"
        }
      ],
      "default": "400"
    },
    {
      "type": "range",
      "id": "text_line_height",
      "label": "Text Line Height",
      "min": 1.2,
      "max": 2.0,
      "step": 0.1,
      "unit": "em",
      "default": 1.6
    },
    {
      "type": "header",
      "content": "Desktop Settings"
    },
    {
      "type": "range",
      "id": "padding_vertical_desktop",
      "label": "Vertical Padding (Desktop)",
      "min": 20,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 55
    },
    {
      "type": "range",
      "id": "padding_horizontal_desktop",
      "label": "Horizontal Padding (Desktop)",
      "min": 20,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 80
    },
    {
      "type": "range",
      "id": "margin_vertical_desktop",
      "label": "Vertical Margin (Desktop)",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 20
    },
    {
      "type": "range",
      "id": "quote_size",
      "label": "Quote Icon Size",
      "min": 16,
      "max": 40,
      "step": 2,
      "unit": "px",
      "default": 28
    },
    {
      "type": "range",
      "id": "quote_position_top",
      "label": "Quote Position Top",
      "min": 20,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 60
    },
    {
      "type": "range",
      "id": "quote_position_sides",
      "label": "Quote Position Sides",
      "min": 20,
      "max": 60,
      "step": 5,
      "unit": "px",
      "default": 35
    },
    {
      "type": "header",
      "content": "Mobile Settings"
    },
    {
      "type": "range",
      "id": "padding_vertical_mobile",
      "label": "Vertical Padding (Mobile)",
      "min": 10,
      "max": 60,
      "step": 5,
      "unit": "px",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_horizontal_mobile",
      "label": "Horizontal Padding (Mobile)",
      "min": 10,
      "max": 60,
      "step": 5,
      "unit": "px",
      "default": 30
    },
    {
      "type": "range",
      "id": "margin_vertical_mobile",
      "label": "Vertical Margin (Mobile)",
      "min": 0,
      "max": 60,
      "step": 5,
      "unit": "px",
      "default": 20
    },
    {
      "type": "select",
      "id": "show_quotes_mobile",
      "label": "Show Quotes on Mobile",
      "options": [
        {
          "value": "block",
          "label": "Show"
        },
        {
          "value": "none",
          "label": "Hide"
        }
      ],
      "default": "none"
    },
    {
      "type": "header",
      "content": "Image Settings"
    },
    {
      "type": "range",
      "id": "image_size",
      "label": "Image Size",
      "min": 50,
      "max": 150,
      "step": 5,
      "unit": "px",
      "default": 75
    },
    {
      "type": "header",
      "content": "Spacing Settings"
    },
    {
      "type": "range",
      "id": "text_margin_bottom",
      "label": "Text Margin Bottom",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "user_margin_top",
      "label": "User Margin Top",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "default": 20
    },
    {
      "type": "range",
      "id": "user_details_margin_left",
      "label": "User Details Margin Left",
      "min": 0,
      "max": 30,
      "step": 5,
      "unit": "px",
      "default": 10
    },
    {
      "type": "range",
      "id": "role_margin_top",
      "label": "Role Margin Top",
      "min": 0,
      "max": 15,
      "step": 1,
      "unit": "px",
      "default": 5
    },
    {
      "type": "header",
      "content": "Animation Settings"
    },
    {
      "type": "range",
      "id": "animation_duration",
      "label": "Animation Duration",
      "min": 5,
      "max": 20,
      "step": 1,
      "unit": "sec",
      "default": 10
    },
    {
      "type": "range",
      "id": "progress_bar_height",
      "label": "Progress Bar Height",
      "min": 2,
      "max": 10,
      "step": 1,
      "unit": "px",
      "default": 4
    }
  ],
  "blocks": [
    {
      "type": "testimonial",
      "name": "Testimonial",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "name",
          "label": "Name",
          "default": "Customer Name"
        },
        {
          "type": "text",
          "id": "role",
          "label": "Role",
          "default": "Customer"
        },
        {
          "type": "textarea",
          "id": "text",
          "label": "Testimonial Text",
          "default": "I've worked with literally hundreds of HTML/CSS developers and I have to say the top spot goes to this guy. This guy is an amazing developer."
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Testimonial Slider #8",
      "category": "Custom",
      "blocks": [
        {
          "type": "testimonial",
          "settings": {
            "name": "Miyah Myles",
            "role": "Marketing",
            "text": "I've worked with literally hundreds of HTML/CSS developers and I have to say the top spot goes to this guy. This guy is an amazing developer. He stresses on good, clean code and pays heed to the details. I love developers who respect each and every aspect of a throughly thought out design and do their best to put it in code. He goes over and beyond and transforms ART into PIXELS - without a glitch, every time."
          }
        },
        {
          "type": "testimonial",
          "settings": {
            "name": "June Cha",
            "role": "Software Engineer",
            "text": "This guy is an amazing frontend developer that delivered the task exactly how we need it, do your self a favor and hire him, you will not be disappointed by the work delivered. He will go the extra mile to make sure that you are happy with your project. I will surely work again with him!"
          }
        },
        {
          "type": "testimonial",
          "settings": {
            "name": "Iida Niskanen",
            "role": "Data Entry",
            "text": "This guy is a hard worker. Communication was also very good with him and he was very responsive all the time, something not easy to find in many freelancers. We'll definitely repeat with him."
          }
        }
      ]
    }
  ]
}
{% endschema %}