{% style %}

/* extra code */
.image-comparison-container {
  position: relative;
  width: 100%;
  height: {{ section.settings.section_height }};
  overflow: hidden;
}

.image-comparison-before,
.image-comparison-after {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

.image-comparison-before {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
}

.image-comparison-mask {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 50%;
  overflow: hidden;
  z-index: 1;
}

.image-comparison-mask img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.image-comparison-border {
  position: absolute;
  width: 4px;
  height: 100%;
  left: 50%;
  margin-left: -2px;
  background-color: rgba(0, 0, 0, 0.4);
  z-index: 2;
}

.image-comparison-handle {
  position: absolute;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: {{ section.settings.slider_color }};
  top: 50%;
  margin-top: -25px;
  left: 50%;
  margin-left: -25px;
  opacity: {{ section.settings.slider_opacity }};
  cursor: ew-resize;
  z-index: 3;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  touch-action: none;
  user-select: none;
}

.image-comparison-handle svg {
  width: 20px;
  height: 20px;
}

@media (max-width: 768px) {
  .image-comparison-handle {
    width: 40px;
    height: 40px;
    margin-top: -20px;
    margin-left: -20px;
  }

  .image-comparison-handle svg {
    width: 16px;
    height: 16px;
  }
}
{% endstyle %}

<div class="image-comparison-container">
  <img class="image-comparison-before" src="{{ section.settings.before_image | img_url: '2000x' }}" alt="Before Image" />

  <div class="image-comparison-mask">
    <img class="image-comparison-after" src="{{ section.settings.after_image | img_url: '2000x' }}" alt="After Image" />
  </div>

  <div class="image-comparison-border"></div>
  <div class="image-comparison-handle">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polyline points="15 18 9 12 15 6"></polyline>
        </svg>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polyline points="9 18 15 12 9 6"></polyline>
        </svg>
  </div>
</div>



<script>
document.addEventListener('DOMContentLoaded', function() {
    const container = document.querySelector('.image-comparison-container');
    const mask = document.querySelector('.image-comparison-mask');
    const border = document.querySelector('.image-comparison-border');
    const handle = document.querySelector('.image-comparison-handle');
    
    if (!handle || !mask || !border) return;
    
    let isDragging = false;
    
    // Initialize slider position
    function initSlider() {
        mask.style.width = '50%';
        border.style.left = '50%';
        handle.style.left = '50%';
    }
    
    // Mouse events
    handle.addEventListener('mousedown', function(e) {
        isDragging = true;
        e.preventDefault();
    });
    
    document.addEventListener('mousemove', function(e) {
        if (!isDragging) return;
        moveSlider(e.clientX);
    });
    
    document.addEventListener('mouseup', function() {
        isDragging = false;
    });
    
    // Touch events for mobile
    handle.addEventListener('touchstart', function(e) {
        isDragging = true;
        e.preventDefault();
    });
    
    document.addEventListener('touchmove', function(e) {
        if (!isDragging) return;
        moveSlider(e.touches[0].clientX);
    });
    
    document.addEventListener('touchend', function() {
        isDragging = false;
    });
    
    // Click/tap on container to move slider
    container.addEventListener('click', function(e) {
        if (isDragging) return; // Prevent conflict with drag
        moveSlider(e.clientX);
    });
    
    function moveSlider(xPosition) {
        const containerRect = container.getBoundingClientRect();
        const containerLeft = containerRect.left;
        const containerWidth = containerRect.width;
        
        let newPosition = xPosition - containerLeft;
        
        // Keep within bounds
        newPosition = Math.max(0, Math.min(newPosition, containerWidth));
        
        const percentage = (newPosition / containerWidth) * 100;
        
        mask.style.width = percentage + '%';
        border.style.left = percentage + '%';
        handle.style.left = percentage + '%';
    }
    
    // Initialize on load
    initSlider();
    
    // Handle window resize
    window.addEventListener('resize', function() {
        // Recalculate position based on current percentage
        const currentPercentage = parseFloat(mask.style.width) || 50;
        mask.style.width = currentPercentage + '%';
        border.style.left = currentPercentage + '%';
        handle.style.left = currentPercentage + '%';
    });
});
</script>

{% schema %}
{
  "name": "Image Comparison Slider",
  "settings": [
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "image_picker",
      "id": "before_image",
      "label": "Before Image",
      "info": "This will be shown on the right side"
    },
    {
      "type": "image_picker",
      "id": "after_image",
      "label": "After Image",
      "info": "This will be shown on the left side and revealed by the slider"
    },
    {
      "type": "header",
      "content": "Slider Settings"
    },
    {
      "type": "color",
      "id": "slider_color",
      "label": "Slider Handle Color",
      "default": "#4682B4"
    },
    {
      "type": "range",
      "id": "slider_opacity",
      "min": 0.1,
      "max": 1,
      "step": 0.1,
      "label": "Slider Handle Opacity",
      "default": 0.9
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "text",
      "id": "section_height",
      "label": "Section Height",
      "default": "600px",
      "info": "Enter value with unit (e.g. 500px or 80vh)"
    }
  ],
  "presets": [
    {
      "name": "Image Comparison Slider",
      "category": "Media"
    }
  ]
}
{% endschema %}