{{ 'section-multicolumn-star-clone.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{%- assign sec_id = '#shopify-section-' | append: section.id -%}

{%- liquid
  assign title = section.settings.title
  assign heading_size = section.settings.heading_size
  assign image_width =  section.settings.image_width
  assign image_ratio = section.settings.image_ratio
  assign button_label = section.settings.button_label
  assign columns_desktop = section.settings.columns_desktop
  assign column_alignment = section.settings.column_alignment
  assign background_style = section.settings.background_style
  assign columns_mobile = section.settings.columns_mobile
  assign swipe_on_mobile = section.settings.swipe_on_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom

  assign image = section.settings.image
  assign title = section.settings.title
  assign content_alignment = section.settings.content_alignment
  assign text = section.settings.text
  assign num_stars = section.settings.num_stars
  assign desktop_content_position = section.settings.desktop_content_position
  assign filled_star_color = section.settings.filled_star_color
  assign bg_star_color = section.settings.bg_star_color
  assign color_scheme = section.settings.color_scheme
  assign link_label = section.settings.link_label
  assign link = section.settings.link
-%}

{%- style -%}
  {{ sec_id }} .section-padding {
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    {{ sec_id }}.section-padding {
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
    }
  }
{%- endstyle -%}

{%- liquid
  assign columns_mobile_int = section.settings.columns_mobile | plus: 0
  assign show_mobile_slider = false
  if section.settings.swipe_on_mobile and section.blocks.size > columns_mobile_int
    assign show_mobile_slider = true
  endif
-%}

<div class="pc-multicolumn color-{{ color_scheme }} pc-gradient{% unless background_style == 'none' and settings.text_boxes_border_thickness > 0 or settings.text_boxes_shadow_opacity > 0 %} pc-background-{{ section.settings.background_style }}{% endunless %}{% if section.settings.title == blank %} pc-no-heading{% endif %}">
  <div class="pc-page-width pc-section-{{ section.id }}-padding pc-isolate{% if settings.animations_reveal_on_scroll %} pc-scroll-trigger pc-animate--slide-in{% endif %}"
    {% if settings.animations_reveal_on_scroll %}
      data-cascade
    {% endif %}
  >
    {%- unless section.settings.title == blank -%}
      <div class="pc-title-wrapper-with-link pc-title-wrapper--self-padded-mobile pc-title-wrapper--no-top-margin pc-multicolumn__title">
        <h2 class="pc-title pc-inline-richtext {{ heading_size }}">
          {{ settings.title }}
        </h2>
        {%- if section.settings.button_label != blank and show_mobile_slider -%}
          <a href="{{ section.settings.button_link }}" class="pc-link pc-underlined-link pc-large-up-hide">
            {{- button_label | escape -}}
          </a>
        {%- endif -%}
      </div>
    {%- endunless -%}
    <slider-component class="pc-slider-mobile-gutter">
      <ul
        class="pc-multicolumn-list pc-contains-content-container pc-grid pc-grid--{{ columns_mobile }}-col-tablet-down pc-grid--{{ columns_desktop }}-col-desktop{% if show_mobile_slider %} pc-slider pc-slider--tablet pc-grid--peek{% endif %}"
        id="Slider-{{ section.id }}"
        role="list"
      >
        {%- liquid
          assign highest_ratio = 0
          for block in section.blocks
            if block.settings.image.aspect_ratio > highest_ratio
              assign highest_ratio = block.settings.image.aspect_ratio
            endif
          endfor
        -%}
        {%- for block in section.blocks -%}
          {%- assign empty_column = '' -%}
          {%- if image == blank
            and title == blank
            and text == blank
            and link_label == blank
          -%}
            {%- assign empty_column = ' pc-multicolumn-list__item--empty' -%}
          {%- endif -%}

          <li
            id="Slide-{{ section.id }}-{{ forloop.index }}"
            class="pc-multicolumn-list__item pc-grid__item{% if swipe_on_mobile %} pc-slider__slide{% endif %}{% if column_alignment == 'center' %} pc-center{% endif %}{{ empty_column }}{% if settings.animations_reveal_on_scroll %} pc-scroll-trigger pc-animate--slide-in{% endif %}"
            {{ block.shopify_attributes }}
            {% if settings.animations_reveal_on_scroll %}
              data-cascade
              style="--animation-order: {{ forloop.index }};"
            {% endif %}
          >
            <div class="pc-multicolumn-card pc-content-container">
              {%- if image != blank -%}
                {% if image_ratio == 'adapt' or section.settings.image_ratio == 'circle' %}
                  {% assign spaced_image = true %}
                {% endif %}
                <div class="pc-multicolumn-card__image-wrapper pc-multicolumn-card__image-wrapper--{{ section.settings.image_width }}-width{% if section.settings.image_width != 'full' or spaced_image %} pc-multicolumn-card-spacing{% endif %}">
                  <div
                    class="pc-media pc-media--transparent pc-media--{{ section.settings.image_ratio }}"
                    {% if section.settings.image_ratio == 'adapt' %}
                      style="padding-bottom: {{ 1 | divided_by: highest_ratio | times: 100 }}%;"
                    {% endif %}
                  >
                    {%- liquid
                      assign number_of_columns = section.settings.columns_desktop
                      assign number_of_columns_mobile = section.settings.columns_mobile
                      assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                      if section.settings.image_width == 'half'
                        assign image_width = 0.5
                      elsif section.settings.image_width == 'third'
                        assign image_width = 0.33
                      else
                        assign image_width = 1
                      endif
                    -%}
                    {% capture sizes %}
                      (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                      (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                      (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                      calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                    {% endcapture %}
                    {{
                      block.settings.image
                      | image_url: width: 3200
                      | image_tag:
                        widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                        sizes: sizes,
                        class: 'pc-multicolumn-card__image'
                    }}
                  </div>
                </div>
              {%- endif -%}
              
              <div class="pc-multicolumn-card__info">
                {%- if block.settings.text != blank -%}
                   <h3 class="pc-inline-richtext {{ block.settings.content_alignment }}">{{ block.settings.title }}</h3>
                <div class="pc-rating {{ block.settings.desktop_content_position }}">
                    {% assign num_stars = block.settings.num_stars %}
                    {% assign filled_star_color = block.settings.filled_star_color %}
                    {% assign empty_star_color = block.settings.filled_star_color %}
                    {% assign bg_star_color = block.settings.bg_star_color %}

                    {% for i in (1..num_stars) %}
                      <span
                        class="pc-star{% if i <= product.average_rating %} pc-filled{% endif %}"
                        style="color: {% if i <= product.average_rating %}{{ filled_star_color }}{% else %}{{ empty_star_color }}{% endif %}; background-color: {{ bg_star_color }};"
                      >
                        â˜…
                      </span>
                    {% endfor %}
                  </div>
                  <div class="pc-rte">{{ block.settings.text }}</div>
                {%- endif -%}
                {%- if block.settings.link_label != blank -%}
                  <a
                    class="pc-link pc-animate-arrow"
                    {% if block.settings.link == blank %}
                      role="link" aria-disabled="true"
                    {% else %}
                      href="{{ block.settings.link }}"
                    {% endif %}
                  >
                    {{- block.settings.link_label | escape -}}
                    <span class="pc-svg-wrapper"
                      ><span class="pc-icon-wrap">&nbsp;{{ 'icon-arrow.svg' | inline_asset_content }}</span></span
                    >
                  </a>
                {%- endif -%}
              </div>
            </div>
          </li>
        {%- endfor -%}
      </ul>

      {%- if show_mobile_slider -%}
        <div class="pc-slider-buttons pc-large-up-hide">
          <button
            type="button"
            class="pc-slider-button pc-slider-button--prev"
            name="previous"
            aria-label="{{ 'general.slider.previous_slide' | t }}"
          >
            <span class="pc-svg-wrapper">{{ 'icon-caret.svg' | inline_asset_content }}</span>
          </button>
          <div class="pc-slider-counter pc-caption">
            <span class="pc-slider-counter--current">1</span>
            <span aria-hidden="true"> / </span>
            <span class="pc-visually-hidden">{{ 'general.slider.of' | t }}</span>
            <span class="pc-slider-counter--total">{{ section.blocks.size }}</span>
          </div>
          <button
            type="button"
            class="pc-slider-button pc-slider-button--next"
            name="next"
            aria-label="{{ 'general.slider.next_slide' | t }}"
          >
            <span class="pc-svg-wrapper">{{ 'icon-caret.svg' | inline_asset_content }}</span>
          </button>
        </div>
      {%- endif -%}
    </slider-component>
    <div class="pc-center{% if show_mobile_slider %} pc-small-hide pc-medium-hide{% endif %}">
      {%- if section.settings.button_label != blank -%}
        <a
          class="pc-button pc-button--primary"
          {% if section.settings.button_link == blank %}
            role="link" aria-disabled="true"
          {% else %}
            href="{{ section.settings.button_link }}"
          {% endif %}
        >
          {{ section.settings.button_label | escape }}
        </a>
      {%- endif -%}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.multicolumn.name",
  "class": "section",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "t:sections.multicolumn.settings.title.default",
      "label": "t:sections.multicolumn.settings.title.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "hxl",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "hxxl",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "header",
      "content": "t:sections.multicolumn.settings.header_image.content"
    },    
    {
      "type": "select",
      "id": "image_width",
      "options": [
        {
          "value": "third",
          "label": "t:sections.multicolumn.settings.image_width.options__1.label"
        },
        {
          "value": "half",
          "label": "t:sections.multicolumn.settings.image_width.options__2.label"
        },
        {
          "value": "full",
          "label": "t:sections.multicolumn.settings.image_width.options__3.label"
        }
      ],
      "default": "full",
      "label": "t:sections.multicolumn.settings.image_width.label"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.multicolumn.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.multicolumn.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.multicolumn.settings.image_ratio.options__3.label"
        },
        {
          "value": "circle",
          "label": "t:sections.multicolumn.settings.image_ratio.options__4.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.multicolumn.settings.image_ratio.label"
    },
    {
      "type": "header",
      "content": "t:sections.multicolumn.settings.header_button.content"
    },    
    {
      "type": "text",
      "id": "button_label",
      "default": "t:sections.multicolumn.settings.button_label.default",
      "label": "t:sections.multicolumn.settings.button_label.label", 
      "info": "t:sections.multicolumn.settings.button_label.info"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "t:sections.multicolumn.settings.button_link.label"
    },    
    {
      "type": "header",
      "content": "t:sections.multicolumn.settings.header_layout.content"
    },     
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3,
      "label": "t:sections.multicolumn.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "column_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.multicolumn.settings.column_alignment.label"
    },
    {
      "type": "select",
      "id": "background_style",
      "options": [
        {
          "value": "none",
          "label": "t:sections.multicolumn.settings.background_style.options__1.label"
        },
        {
          "value": "primary",
          "label": "t:sections.multicolumn.settings.background_style.options__2.label"
        }
      ],
      "default": "primary",
      "label": "t:sections.multicolumn.settings.background_style.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },    
    {
      "type": "header",
      "content": "t:sections.multicolumn.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.multicolumn.settings.columns_mobile.label"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "default": false,
      "label": "t:sections.multicolumn.settings.swipe_on_mobile.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
   {
  "type": "column",
  "name": "t:sections.multicolumn.blocks.column.name",
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.multicolumn.blocks.column.settings.image.label"
    },
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "t:sections.multicolumn.blocks.column.settings.title.default",
      "label": "t:sections.multicolumn.blocks.column.settings.title.label"
    },
    {
      "type": "select",
      "id": "content_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.rich-text.settings.content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.rich-text.settings.content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.rich-text.settings.content_alignment.options__3.label"
        }
      ],
      "default": "left",
      "label": "Heading Alignment"
    },
    {
      "type": "richtext",
      "id": "text",
      "default": "t:sections.multicolumn.blocks.column.settings.text.default",
      "label": "t:sections.multicolumn.blocks.column.settings.text.label"
    },
    {
      "type": "number",
      "id": "num_stars",
      "label": "Number of Stars",
      "default": 5
    },
    {
      "type": "select",
      "id": "desktop_content_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.rich-text.settings.desktop_content_position.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.rich-text.settings.desktop_content_position.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.rich-text.settings.desktop_content_position.options__3.label"
        }
      ],
      "default": "center",
      "label": "Star Position Alignment"
    },
    {
      "type": "color",
      "id": "filled_star_color",
      "label": "Filled Star Color",
      "default": "#FFD700"
    },
    {
      "type": "color",
      "id": "empty_star_color",
      "label": "Empty Star Color",
      "default": "#CCCCCC"
    },
    {
      "type": "color",
      "id": "bg_star_color",
      "label": "Star Background Color",
      "default": "transparent"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "My BG Color",
      "default": "scheme-6"
    },
    {
      "type": "text",
      "id": "link_label",
      "label": "t:sections.multicolumn.blocks.column.settings.link_label.label",
      "info": "t:sections.multicolumn.blocks.column.settings.link_label.info"
    },
    {
      "type": "url",
      "id": "link",
      "label": "t:sections.multicolumn.blocks.column.settings.link.label"
    }
  ]
}
  ],
  "presets": [
    {
      "name": "multicolumn-star-column",
      "blocks": [
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}
